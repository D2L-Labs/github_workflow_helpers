name: Dev TF Validate Plan
on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    branches: [master]

jobs:
  check-modified-files-job:
    outputs:
      terraform_changes: ${{ steps.check-files.outputs.terraform_changes }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: check modified files
        id: check-files
        run: |
          echo "=============== list changed files ==============="
          git diff --name-only HEAD^ HEAD
          
          echo "========== check paths of changed files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          echo "::set-output name=terraform_changes::false"

          while IFS= read -r file
          do
            echo $file
            if [[ $file == terraform/* ]]; then
              echo "Change in 'terraform' directory found"
              echo "::set-output name=terraform_changes::true"
              break
            fi
          done < files.txt
  
  dev-tf-validate-plan-job:
    needs: check-modified-files-job
    environment: staging_environment
    if: needs.check-modified-files-job.outputs.terraform_changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install npm packages
        run: |
          git config --global url."https://github.com/".insteadOf git@github.com:
          git config --global url."https://".insteadOf git://
          cd packages/backend/lambda/layers/dependency/nodejs
          npm install --production
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Verify Terraform version
        run: terraform --version

      - name: Initialize Terraform
        id: init
        run: |
          cd terraform/environments/dev
          terraform init
      - name: Validate Terraform
        id: validate
        run: |
          cd terraform/environments/dev
          terraform validate -no-color
      - name: Plan Terraform
        id: plan
        continue-on-error: true
        run: |
          cd terraform/environments/dev
          terraform plan -no-color
      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Initialization ⚙️ \`${{ steps.init.outcome }}\`
            #### Terraform Plan 📖 \`${{ steps.plan.outcome }}\`
            #### Terraform Validation 🤖 \`${{ steps.validate.outcome }}\`
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
            
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
  dev-validate-job:
    # in the future add other jobs to needs, needs: [job1, job2, ...]
    needs: dev-tf-validate-plan-job
    runs-on: ubuntu-latest
    if: always()
    steps: # result is sucess if the job is also skipped
      - name: Validate Non-Terraform
        if: needs.dev-tf-validate-plan-job.result == 'success' && needs.check-modified-files-job.outputs.terraform_changes == 'false' 
        run: |
          echo "Changes are valid"
          exit 0 
      - name: Validate terraform
        if: needs.dev-tf-validate-plan-job.result == 'success' && needs.check-modified-files-job.outputs.terraform_changes == 'true'
        run: | 
          echo "Changes to terraform are valid"
          exit 0
      - name: Invalidate terraform
        if: needs.dev-tf-validate-plan-job.result == 'false' && needs.check-modified-files-job.outputs.terraform_changes == 'true' 
        run: |
          echo "Changes to terraform are invalid"
          exit 1
